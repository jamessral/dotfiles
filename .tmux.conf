# Setting the prefix from C-b to C-m

set -g prefix C-s

# Free the original Ctrl-b prefix keybinding
unbind C-b

#setting the delay between prefix and command
set -s escape-time 1

# Ensure that we can send Ctrl-A to other apps
bind a send-prefix

# Switch back and forth between 2 windows
bind C-l last-window

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
set-window-option -g pane-base-index 1

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# splitting panes
bind | split-window -h
bind - split-window -v

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Set the default terminal mode to 256color mode
# set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

set -g default-shell $SHELL
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# enable activity alerts
#set-window-option -g monitor-activity on
#set -g visual-activity on

# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# The statusbar {
set -g status-justify left
set -g status-interval 2
set -g status-position top
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M '
set -g status-right-length 50
set -g status-left-length 20

# Update the status bar every sixty seconds
set -g status-interval 60

setw -g window-status-current-fg white
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour237]:#[fg=colour237]#W#[fg=colour237]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1

# }

setw -g automatic-rename on

# set colors for the active window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg cyan
set-window-option -g window-status-current-attr dim

# pane colors
set -g pane-border-fg default
set -g pane-border-bg default
set -g pane-active-border-fg green
set -g pane-active-border-bg default

# Command / message line
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# enable vi keys.
set-window-option -g mode-keys vi

# Maximize and restore a pane. Only needed for 1.7 and lower.
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# vi copying
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection

bind y run-shell -b "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"

# Use rainbarf, if available
if-shell 'which battery >/dev/null' 'source-file ~/.tmux-battery.conf'

# Platform specific configurations
#if-shell 'test "$(uname)" = "Darwin"' 'source-file ~/.tmux-osx.conf'
#if-shell 'test "$(uname)" = "Linux"' 'source-file ~/.tmux-linux.conf'
#
#

# http://stackoverflow.com/questions/11832199/tmux-set-g-mouse-mode-on-doesnt-work
set-option -g mouse on

# make scrolling with wheels work
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

#urxvt tab like window switching (-n: no prior escape seq)
# From:https://wiki.archlinux.org/index.php/Tmux
bind -n S-down new-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

# Terminal Emulator Titles
set -g set-titles on
set -g set-titles-string '#T'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Get clear screen back: <prefix> C-l
bind C-l send-keys 'C-l'
# Get search back: <prefix> C-s
bind C-s send-keys 'C-s'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
